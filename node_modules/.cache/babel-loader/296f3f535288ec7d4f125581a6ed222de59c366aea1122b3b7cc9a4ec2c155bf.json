{"ast":null,"code":"var _jsxFileName = \"/Users/GiniforOffice/cosmetic-estimator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, ButtonGroup, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [product, setProduct] = useState(null);\n  const [volume, setVolume] = useState(null);\n  const [quantity, setQuantity] = useState(null);\n  const [estimate, setEstimate] = useState(0);\n  const productOptions = ['세럼/앰플', '크림'];\n  const volumeOptions = ['50ml', '100ml', '150ml'];\n  const quantityOptions = [1000, 3000, 5000];\n  useEffect(() => {\n    if (product && volume && quantity) {\n      // This is a simplified estimation logic.\n      // You can replace this with your actual calculation.\n      const basePrice = product === '세럼/앰플' ? 10 : 15;\n      const volumePrice = parseInt(volume.replace('ml', '')) * 0.1;\n      const quantityDiscount = quantity > 2000 ? 0.9 : 1;\n      const total = basePrice * volumePrice * quantity * quantityDiscount;\n      setEstimate(total);\n    } else {\n      setEstimate(0);\n    }\n  }, [product, volume, quantity]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        as: \"h2\",\n        children: \"\\uD654\\uC7A5\\uD488 \\uC0DD\\uC0B0 \\uACAC\\uC801\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"\\uC81C\\uD488\\uAD70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: productOptions.map(p => /*#__PURE__*/_jsxDEV(Button, {\n                variant: product === p ? 'primary' : 'outline-primary',\n                onClick: () => setProduct(p),\n                children: p\n              }, p, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"\\uC6A9\\uB7C9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: volumeOptions.map(v => /*#__PURE__*/_jsxDEV(Button, {\n                variant: volume === v ? 'primary' : 'outline-primary',\n                onClick: () => setVolume(v),\n                children: v\n              }, v, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"\\uC218\\uB7C9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: quantityOptions.map(q => /*#__PURE__*/_jsxDEV(Button, {\n                variant: quantity === q ? 'primary' : 'outline-primary',\n                onClick: () => setQuantity(q),\n                children: [q, \"\\uAC1C\"]\n              }, q, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"\\uC608\\uC0C1 \\uACAC\\uC801: \", estimate.toLocaleString(), \"\\uC6D0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HR8WjQLjhLiXQAxMbfgQ2WxCv40=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Button","ButtonGroup","Card","jsxDEV","_jsxDEV","App","_s","product","setProduct","volume","setVolume","quantity","setQuantity","estimate","setEstimate","productOptions","volumeOptions","quantityOptions","basePrice","volumePrice","parseInt","replace","quantityDiscount","total","className","children","Header","as","fileName","_jsxFileName","lineNumber","columnNumber","Body","map","p","variant","onClick","v","q","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/GiniforOffice/cosmetic-estimator/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  ButtonGroup,\n  Card,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  const [product, setProduct] = useState(null);\n  const [volume, setVolume] = useState(null);\n  const [quantity, setQuantity] = useState(null);\n  const [estimate, setEstimate] = useState(0);\n\n  const productOptions = ['세럼/앰플', '크림'];\n  const volumeOptions = ['50ml', '100ml', '150ml'];\n  const quantityOptions = [1000, 3000, 5000];\n\n  useEffect(() => {\n    if (product && volume && quantity) {\n      // This is a simplified estimation logic.\n      // You can replace this with your actual calculation.\n      const basePrice = product === '세럼/앰플' ? 10 : 15;\n      const volumePrice = parseInt(volume.replace('ml', '')) * 0.1;\n      const quantityDiscount = quantity > 2000 ? 0.9 : 1;\n      const total = basePrice * volumePrice * quantity * quantityDiscount;\n      setEstimate(total);\n    } else {\n      setEstimate(0);\n    }\n  }, [product, volume, quantity]);\n\n  return (\n    <Container className=\"mt-5\">\n      <Card>\n        <Card.Header as=\"h2\">화장품 생산 견적</Card.Header>\n        <Card.Body>\n          <Row className=\"mb-3\">\n            <Col>\n              <h5>제품군</h5>\n              <ButtonGroup>\n                {productOptions.map((p) => (\n                  <Button\n                    key={p}\n                    variant={product === p ? 'primary' : 'outline-primary'}\n                    onClick={() => setProduct(p)}\n                  >\n                    {p}\n                  </Button>\n                ))}\n              </ButtonGroup>\n            </Col>\n          </Row>\n\n          <Row className=\"mb-3\">\n            <Col>\n              <h5>용량</h5>\n              <ButtonGroup>\n                {volumeOptions.map((v) => (\n                  <Button\n                    key={v}\n                    variant={volume === v ? 'primary' : 'outline-primary'}\n                    onClick={() => setVolume(v)}\n                  >\n                    {v}\n                  </Button>\n                ))}\n              </ButtonGroup>\n            </Col>\n          </Row>\n\n          <Row className=\"mb-4\">\n            <Col>\n              <h5>수량</h5>\n              <ButtonGroup>\n                {quantityOptions.map((q) => (\n                  <Button\n                    key={q}\n                    variant={quantity === q ? 'primary' : 'outline-primary'}\n                    onClick={() => setQuantity(q)}\n                  >\n                    {q}개\n                  </Button>\n                ))}\n              </ButtonGroup>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col>\n              <h4>예상 견적: {estimate.toLocaleString()}원</h4>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}